<html>
<head>
</head>
<body>
	<canvas id="sandbox" width="410" height="410"></canvas>
</body>
</html>
<script type="text/javascript">
	var canvas = document.getElementById("sandbox"),
			context = canvas.getContext("2d"),
			loadedImages = [],
			standardPlayingPiece = {"width": 50, "height":50},
			board = defineBoard(0, 0, standardPlayingPiece),
			spriteFilePath = "arimaa_50x50.jpg",
			spriteProvider = null;

	function defineBoard(startX, startY, pieceTemplate){
		var columns = 8;
		var rows = 8;
		return {
			"x":startX, 
			"y":startY, 
			"piece": pieceTemplate,
			"width": 1 + (columns * pieceTemplate.width), 
			"height": 1 + (rows * pieceTemplate.height),
			"traps": [{"x": 2, "y": 2}, {"x": 2, "y": 5}, {"x": 5, "y": 2}, {"x": 5, "y": 5}]
		};
	}

	function createSpriteProvider(image){
		return {
			"image": image,
			"gold": {
				"elephant": defineSprite(3, 151, 46, 46),
				"camel": defineSprite(51, 3, 47, 47),
				"horse": defineSprite(50, 202, 47, 46),
				"dog": defineSprite(51, 103, 46, 46),
				"cat": defineSprite(3, 51, 46, 46),
				"rabbit": defineSprite(2, 250, 46, 46)
			},
			"silver": {				
				"elephant": defineSprite(100, 151, 46, 46),
				"camel": defineSprite(148, 3, 47, 47),
				"horse": defineSprite(147, 202, 47, 46),
				"dog": defineSprite(148, 103, 46, 46),
				"cat": defineSprite(100, 51, 46, 46),
				"rabbit": defineSprite(99, 250, 46, 46)
			},
			getSprite: function(color, name){
				return this[color][name];
			}
		};
		//TODO: add gold and silver arrays, maybe include image loading
	}

	function defineSprite(x, y, width, height){
		return {
			"x": x,
			"y": y,
			"width": width,
			"height": height
		};
	}
	
	function clearBoard(context, board){
		context.clearRect(board.x, board.y, board.width, board.height)
	}

	function drawBoard(context, board){
		clearBoard(context, board);
		context.beginPath();

		//vertical lines
		for (var x = 0; x <= board.width; x += board.piece.width){
			context.moveTo(0.5 + x, 0);
			context.lineTo(0.5 + x, board.width);
		}

		//horizontal lines
		for (var y = 0; y <= board.height; y += board.piece.height){
			context.moveTo(0, 0.5 + y);
			context.lineTo(board.height, 0.5 + y);
		}

		//trap squares
		for(var t = 0; t < board.traps.length; t++){
			var trap = board.traps[t],
					startX = (board.piece.width * trap.x) + 0.5,
					startY = (board.piece.height * trap.y) + 0.5;
			context.fillRect(startX, startY, board.piece.width, board.piece.height);
		}

		//ink Paths
    context.strokeStyle = "#ccc";
    context.stroke();
	}

	function loadImage(imageFilePath, success){
		var img = new Image();
		img.onload = function(){
				if(success !== null) {
					success(img);
				}
			};
		img.src = imageFilePath;
	}

	function drawSprite(color, name, x, y){
		var sprite = spriteProvider.getSprite(color, name);
		console.log(sprite);
		context.drawImage(spriteProvider.image, sprite.x, sprite.y, sprite.width, sprite.height, x, y, sprite.width, sprite.height);
	}

	function render(){
		drawBoard(context, board);

		//draw gold sprites
		drawSprite("gold", "elephant", 2.5, 2.5);
		drawSprite("gold", "camel", 52.5, 2.5);
		drawSprite("gold", "horse", 102.5, 2.5);
		drawSprite("gold", "dog", 152.5, 2.5);
		drawSprite("gold", "cat", 202.5, 2.5);
		drawSprite("gold", "rabbit", 252.5, 2.5);

		//draw silver sprites
		drawSprite("silver", "elephant", 2.5, 52.5);
		drawSprite("silver", "camel", 52.5, 52.5);
		drawSprite("silver", "horse", 102.5, 52.5);
		drawSprite("silver", "dog", 152.5, 52.5);
		drawSprite("silver", "cat", 202.5, 52.5);
		drawSprite("silver", "rabbit", 252.5, 52.5);
	}

	function synchronize(image){
		spriteProvider = createSpriteProvider(image);
		render();
	}

	function Square(row, column) {
	    this.row = row;
	    this.column = column;
	}

	function getCursorPosition(e) {
    /* returns Square with .row and .column properties */
    var x;
    var y;
    if (e.pageX != undefined && e.pageY != undefined) {
			x = e.pageX;
			y = e.pageY;
    }
    else {
			x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
			y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
    }
    x -= canvas.offsetLeft;
    y -= canvas.offsetTop;
    x = Math.min(x, board.width * standardPlayingPiece.width);
    y = Math.min(y, board.height * standardPlayingPiece.height);
    var square = new Square(Math.floor(y/standardPlayingPiece.height), Math.floor(x/standardPlayingPiece.width));
    return square;
	}

	function boardOnClick(e) {
	    var square = getCursorPosition(e);
	    console.log("clicked on column " + square.column + " and row " + square.row);
	   //  for (var i = 0; i < gNumPieces; i++) {
				// if ((gPieces[i].row == cell.row) && 
				//     (gPieces[i].column == cell.column)) {
				//     clickOnPiece(i);
				//     return;
				// }
	   //  }
	    //clickOnEmptyCell(cell);
	}

	loadImage(spriteFilePath, synchronize);
	canvas.addEventListener("click", boardOnClick, false);
</script>